{
  "name": "broccoli-merge-trees",
  "description": "Broccoli plugin to merge multiple trees into one",
  "version": "0.2.4",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "main": "index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/broccolijs/broccoli-merge-trees.git"
  },
  "keywords": [
    "broccoli-plugin",
    "merge",
    "copy"
  ],
  "dependencies": {
    "broccoli-plugin": "^1.0.0",
    "debug": "^2.2.0",
    "symlink-or-copy": "^1.0.0"
  },
  "devDependencies": {
    "broccoli-fixture": "^0.1.0",
    "chai": "^3.4.0",
    "chai-as-promised": "^5.1.0",
    "mocha": "^2.3.3",
    "mocha-jshint": "^2.2.5"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "# broccoli-merge-trees\n\n[![Build Status](https://travis-ci.org/broccolijs/broccoli-merge-trees.svg?branch=master)](https://travis-ci.org/broccolijs/broccoli-merge-trees)\n[![Build status](https://ci.appveyor.com/api/projects/status/9fkvegf4qbvfsg5v?svg=true)](https://ci.appveyor.com/project/embercli/broccoli-merge-trees)\n\nCopy multiple trees of files on top of each other, resulting in a single merged tree.\n\n## Installation\n\n```bash\nnpm install --save-dev broccoli-merge-trees\n```\n\n## Usage\n\n```js\nvar BroccoliMergeTrees = require('broccoli-merge-trees');\n\nvar mergedNode = new BroccoliMergeTrees(inputNodes, options);\n```\n\n* **`inputNodes`**: An array of nodes, whose contents will be merged\n\n* **`options`**: A hash of options\n\n### Options\n\n* `overwrite`: By default, broccoli-merge-trees throws an error when a file\n  exists in multiple nodes. If you pass `{ overwrite: true }`, the output\n  will contain the version of the file as it exists in the last input\n  node that contains it.\n\n* `annotation`: A note to help tell multiple plugin instances apart.\n\n### Example\n\nIf this is your `Brocfile.js`:\n\n```js\nvar BroccoliMergeTrees = require('broccoli-merge-trees');\n\nmodule.exports = new BroccoliMergeTrees(['public', 'scripts']);\n```\n\nAnd your project contains these files:\n\n    .\n    ├─ public\n    │  ├─ index.html\n    │  └─ images\n    │     └─ logo.png\n    ├─ scripts\n    │  └─ app.js\n    ├─ Brocfile.js\n    …\n\nThen running `broccoli build the-output` will generate this folder:\n\n    the-output\n    ├─ app.js\n    ├─ index.html\n    └─ images\n       └─ logo.png\n\nThe parent folders, `public` and `scripts` in this case, are not included in the output. The output tree contains only the files *within* each folder, all mixed together.\n\n## Contributing\n\nClone this repo and run the tests like so:\n\n```\nnpm install\nnpm test\n```\n\nIssues and pull requests are welcome. If you change code, be sure to re-run\n`npm test`. Oftentimes it's useful to add or update tests as well.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/broccolijs/broccoli-merge-trees/issues"
  },
  "homepage": "https://github.com/broccolijs/broccoli-merge-trees#readme",
  "_id": "broccoli-merge-trees@0.2.4",
  "_shasum": "1936f63bb09e24246b1e91d8c53162c0f7b24c3c",
  "_resolved": "https://registry.npmjs.org/broccoli-merge-trees/-/broccoli-merge-trees-0.2.4.tgz",
  "_from": "broccoli-merge-trees@>=0.2.1 <0.3.0"
}
